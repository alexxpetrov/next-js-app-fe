// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file app/user/v1/user.proto (package user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message user.v1.GetInfoRequest
 */
export class GetInfoRequest extends Message<GetInfoRequest> {
  /**
   * @generated from field: string accessToken = 1;
   */
  accessToken = "";

  /**
   * @generated from field: string userId = 2;
   */
  userId = "";

  constructor(data?: PartialMessage<GetInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "user.v1.GetInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "accessToken", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "userId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInfoRequest {
    return new GetInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInfoRequest {
    return new GetInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInfoRequest {
    return new GetInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetInfoRequest | PlainMessage<GetInfoRequest> | undefined, b: GetInfoRequest | PlainMessage<GetInfoRequest> | undefined): boolean {
    return proto3.util.equals(GetInfoRequest, a, b);
  }
}

/**
 * @generated from message user.v1.GetInfoResponse
 */
export class GetInfoResponse extends Message<GetInfoResponse> {
  /**
   * @generated from field: string loginTimestamp = 1;
   */
  loginTimestamp = "";

  /**
   * @generated from field: string registerTimestamp = 2;
   */
  registerTimestamp = "";

  /**
   * @generated from field: string joinedRoomId = 3;
   */
  joinedRoomId = "";

  /**
   * @generated from field: string leftRoomId = 4;
   */
  leftRoomId = "";

  /**
   * @generated from field: string lastMessage = 5;
   */
  lastMessage = "";

  /**
   * @generated from field: string lastMessageRoomId = 6;
   */
  lastMessageRoomId = "";

  constructor(data?: PartialMessage<GetInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "user.v1.GetInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "loginTimestamp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "registerTimestamp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "joinedRoomId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "leftRoomId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "lastMessage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "lastMessageRoomId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInfoResponse {
    return new GetInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInfoResponse {
    return new GetInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInfoResponse {
    return new GetInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetInfoResponse | PlainMessage<GetInfoResponse> | undefined, b: GetInfoResponse | PlainMessage<GetInfoResponse> | undefined): boolean {
    return proto3.util.equals(GetInfoResponse, a, b);
  }
}

